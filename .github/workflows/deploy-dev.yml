name: Deploy DEV to Cloudflare Workers

on:
  push:
    branches:
      - dev  # Triggers only on dev branch
  workflow_dispatch:  # Allows manual workflow run

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm install
        
      # Deploy worker components first (without service bindings)
      - name: Deploy dev-test-bot
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --env dev-test-bot
          
      - name: Deploy dev-lesson0
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --env dev-lesson0
          
      - name: Deploy dev-main-lesson
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --env dev-main-lesson
          
      - name: Deploy dev-reminder
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --env dev-reminder

      # Deploy webhook last (it has service bindings to other workers)
      - name: Deploy dev-telegram-webhook
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --env dev-webhook

      # Set essential secrets for dev-lesson0
      - name: Set dev secrets
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          echo "Setting essential dev secrets..."
          
          # Only set DEV_BOT_TOKEN if it exists
          if [ ! -z "${{ secrets.DEV_BOT_TOKEN }}" ]; then
            echo "Setting DEV_BOT_TOKEN for dev-lesson0..."
            echo "${{ secrets.DEV_BOT_TOKEN }}" | npx wrangler secret put BOT_TOKEN --env dev-lesson0
          else
            echo "DEV_BOT_TOKEN not found in secrets"
          fi

      # Info about manual setup
      - name: Dev environment deployed
        run: |
          echo "âœ… DEV environment deployed successfully!"
          echo ""
          echo "ðŸ“‹ Next steps:"
          echo "1. Set DEV_BOT_TOKEN secret in GitHub if not already done"
          echo "2. Configure dev bot webhook: https://dev-telegram-webhook.<your-subdomain>.workers.dev/tg"
          echo "3. Add other secrets via Cloudflare Dashboard if needed:"
          echo "   - OPENAI_KEY, TRANSLOADIT_KEY, TRANSLOADIT_TPL"
          echo ""
          echo "ðŸ”— Dev workers deployed:"
          echo "- dev-telegram-webhook"
          echo "- dev-linguapulse-test-bot"  
          echo "- dev-linguapulse-lesson0-bot"
          echo "- dev-main-lesson"
          echo "- dev-reminder" 