name: Deploy DEV to Cloudflare Workers

on:
  push:
    branches:
      - dev  # Triggers only on dev branch
  workflow_dispatch:  # Allows manual workflow run

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm install
        
      # Deploy worker components first (without service bindings)
      - name: Deploy dev-newbies-funnel
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --env dev-newbies-funnel
          
      - name: Deploy dev-lesson0
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --env dev-lesson0
          
      - name: Deploy dev-main-lesson
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --env dev-main-lesson
          
      - name: Deploy dev-reminder
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --env dev-reminder

      # Deploy webhook last (it has service bindings to other workers)
      - name: Deploy dev-telegram-webhook
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --env dev-webhook

      # Set all secrets for dev environments (same as production)
      - name: Set dev secrets
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          echo "Setting dev secrets (copying from production secrets)..."
          
          # Set dev bot token for all workers that need it
          if [ ! -z "${{ secrets.DEV_BOT_TOKEN }}" ]; then
            echo "Setting DEV_BOT_TOKEN for dev workers..."
            echo "${{ secrets.DEV_BOT_TOKEN }}" | npx wrangler secret put BOT_TOKEN --env dev-newbies-funnel
            echo "${{ secrets.DEV_BOT_TOKEN }}" | npx wrangler secret put BOT_TOKEN --env dev-lesson0
            echo "${{ secrets.DEV_BOT_TOKEN }}" | npx wrangler secret put BOT_TOKEN --env dev-webhook
            echo "${{ secrets.DEV_BOT_TOKEN }}" | npx wrangler secret put BOT_TOKEN --env dev-main-lesson
            echo "${{ secrets.DEV_BOT_TOKEN }}" | npx wrangler secret put BOT_TOKEN --env dev-reminder
          else
            echo "DEV_BOT_TOKEN not found in secrets"
          fi
          
          # Set OpenAI key for lesson workers (same as production)
          if [ ! -z "${{ secrets.OPENAI_KEY }}" ]; then
            echo "Setting OPENAI_KEY for dev lesson workers..."
            echo "${{ secrets.OPENAI_KEY }}" | npx wrangler secret put OPENAI_KEY --env dev-lesson0
            echo "${{ secrets.OPENAI_KEY }}" | npx wrangler secret put OPENAI_KEY --env dev-main-lesson
          else
            echo "OPENAI_KEY not found in secrets"
          fi
          
          # Set Transloadit keys for lesson workers
          if [ ! -z "${{ secrets.TRANSLOADIT_KEY }}" ]; then
            echo "Setting TRANSLOADIT_KEY for dev lesson workers..."
            echo "${{ secrets.TRANSLOADIT_KEY }}" | npx wrangler secret put TRANSLOADIT_KEY --env dev-lesson0
            echo "${{ secrets.TRANSLOADIT_KEY }}" | npx wrangler secret put TRANSLOADIT_KEY --env dev-main-lesson
          else
            echo "TRANSLOADIT_KEY not found in secrets"
          fi
          
          if [ ! -z "${{ secrets.TRANSLOADIT_TPL }}" ]; then
            echo "Setting TRANSLOADIT_TPL for dev-lesson0..."
            echo "${{ secrets.TRANSLOADIT_TPL }}" | npx wrangler secret put TRANSLOADIT_TPL --env dev-lesson0
          else
            echo "TRANSLOADIT_TPL not found in secrets"
          fi
          
          # Set other secrets if they exist
          if [ ! -z "${{ secrets.SYSTEM_PROMPT }}" ]; then
            echo "Setting SYSTEM_PROMPT for dev lesson workers..."
            echo "${{ secrets.SYSTEM_PROMPT }}" | npx wrangler secret put SYSTEM_PROMPT --env dev-lesson0
            echo "${{ secrets.SYSTEM_PROMPT }}" | npx wrangler secret put SYSTEM_PROMPT --env dev-main-lesson
          fi
          
          if [ ! -z "${{ secrets.TRIBUTE_API_KEY }}" ]; then
            echo "Setting TRIBUTE_API_KEY for dev-webhook..."
            echo "${{ secrets.TRIBUTE_API_KEY }}" | npx wrangler secret put TRIBUTE_API_KEY --env dev-webhook
          fi
          
          # Set DEV_MODE flag for dev-webhook
          echo "true" | npx wrangler secret put DEV_MODE --env dev-webhook

      # Info about deployment
      - name: Dev environment deployed
        run: |
          echo "âœ… DEV environment deployed successfully!"
          echo ""
          echo "ðŸŽ¯ Dev environment features:"
          echo "- All production secrets copied to dev workers"
          echo "- Separate dev database for user data isolation"
          echo "- Dev bot token: @dev_lpulse_bot"
          echo "- Test subscription endpoint available"
          echo ""
          echo "ðŸ”— Dev workers deployed:"
          echo "- dev-telegram-webhook: https://dev-telegram-webhook.andreykatkov13.workers.dev"
          echo "- dev-linguapulse-newbies-funnel"  
          echo "- dev-linguapulse-lesson0-bot"
          echo "- dev-main-lesson"
          echo "- dev-reminder"
          echo ""
          echo "âœ¨ Ready for testing!" 