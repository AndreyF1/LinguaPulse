name: Deploy AWS Lambda

on:
  push:
    paths:
      - 'AWS Backend/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Verify AWS connection
        run: |
          echo "üîê Verifying AWS credentials..."
          aws sts get-caller-identity --no-cli-pager
          echo "üîç Checking Lambda function exists..."
          aws lambda get-function --function-name linguapulse-onboarding --query 'Configuration.FunctionName' --output text --no-cli-pager
          echo "üîë Testing Lambda permissions..."
          aws lambda get-function-configuration --function-name linguapulse-onboarding --query 'Runtime' --output text --no-cli-pager
          echo "üìã Current Lambda configuration:"
          aws lambda get-function-configuration --function-name linguapulse-onboarding --no-cli-pager | head -10
      
      - name: Deploy Lambda function
        run: |
          echo "üîç Starting Lambda deployment..."
          cd "AWS Backend"
          echo "üìÅ Current directory: $(pwd)"
          echo "üìã Files in directory:"
          ls -la
          
          echo "üì¶ Creating zip archive..."
          zip -r lambda_function.zip lambda_function.py
          echo "‚úÖ Zip created, size: $(ls -lh lambda_function.zip)"
          
          echo "üß™ Testing zip file validity..."
          unzip -t lambda_function.zip
          
          echo "üöÄ Updating Lambda function code..."
          if aws lambda update-function-code \
            --function-name linguapulse-onboarding \
            --zip-file fileb://lambda_function.zip \
            --no-cli-pager 2>&1; then
            echo "‚úÖ Lambda code update initiated"
            
            echo "‚è≥ Waiting for Lambda function to become Active..."
            aws lambda wait function-updated --function-name linguapulse-onboarding
            
            echo "‚úÖ Lambda code updated and is now Active"
          else
            echo "‚ùå Failed to update Lambda code, exit code: $?"
            echo "üìã Lambda function current state:"
            aws lambda get-function --function-name linguapulse-onboarding --query 'Configuration.State' --output text --no-cli-pager
            exit 1
          fi
          
          echo "‚öôÔ∏è  Updating Lambda function configuration..."
          if aws lambda update-function-configuration \
            --function-name linguapulse-onboarding \
            --handler lambda_function.lambda_handler \
            --no-cli-pager; then
            echo "‚úÖ Lambda configuration update initiated"
            
            echo "‚è≥ Waiting for configuration update to complete..."
            aws lambda wait function-updated --function-name linguapulse-onboarding
            
            echo "‚úÖ Lambda configuration updated and function is Active"
          else
            echo "‚ùå Failed to update Lambda configuration"
            exit 1
          fi
          
          echo "‚úÖ Lambda deployment completed successfully!"
