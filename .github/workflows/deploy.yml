name: Deploy to Cloudflare Workers

on:
  push:
    branches:
      - main  # или master, в зависимости от вашей основной ветки
  workflow_dispatch:  # позволяет запускать workflow вручную

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm install

      # Деплой всех воркеров через стандартные действия
      - name: Deploy telegram-webhook
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: webhook
          
      - name: Deploy test-bot
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: test-bot
          
      - name: Deploy main-lesson
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: main-lesson
          
      - name: Deploy payment
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: payment
          
      - name: Deploy reminder
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: reminder

      # Специальный шаг для установки переменных и деплоя lesson0-bot
      - name: Setup and deploy lesson0-bot
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          echo "Настройка и деплой lesson0-bot..."
          
          # Проверка настройки переменных
          echo "Проверка текущих переменных..."
          npx wrangler secret list --env lesson0
          
          # Создаем временный файл wrangler-temp.toml с переменными
          cat > wrangler-temp.toml << EOF
          name = "linguapulse-lesson0-bot"
          main = "lesson0-bot.js"
          compatibility_date = "2025-05-17"
          
          [vars]
          SYSTEM_PROMPT = "${{ secrets.SYSTEM_PROMPT }}"
          TRANSLOADIT_TPL = "${{ secrets.TRANSLOADIT_TPL }}"
          
          [[kv_namespaces]]
          binding = "CHAT_KV"
          id = "ff3bf4d1633d45cd92e95d193b7d250f"
          
          [[d1_databases]]
          binding = "USER_DB"
          database_id = "47f30572-4b57-4978-890d-4fa880cf1427"
          EOF
          
          # Деплой с временным файлом конфигурации
          echo "Деплой lesson0-bot с явными переменными..."
          npx wrangler deploy --config wrangler-temp.toml
          
          # Устанавливаем секреты после деплоя
          echo "Установка секретов..."
          echo "${{ secrets.BOT_TOKEN }}" | npx wrangler secret put BOT_TOKEN
          echo "${{ secrets.OPENAI_KEY }}" | npx wrangler secret put OPENAI_KEY
          echo "${{ secrets.TRANSLOADIT_KEY }}" | npx wrangler secret put TRANSLOADIT_KEY
          
          # Проверка настройки после деплоя
          echo "Проверка переменных после настройки..."
          npx wrangler secret list

      # Отдельный шаг для настройки переменных через API напрямую
      - name: Set environment variables for all services
        run: |
          echo "Настройка переменных для всех сервисов через API..."

          # Установка для telegram-webhook
          echo "Установка переменных для telegram-webhook..."
          curl -X PUT "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CF_ACCOUNT_ID }}/workers/scripts/telegram-webhook/settings/variables" \
            -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "variables": [
                {"name": "BOT_TOKEN", "type": "secret", "text": "${{ secrets.BOT_TOKEN }}"},
                {"name": "TRIBUTE_APP_LINK", "type": "plaintext", "text": "${{ secrets.TRIBUTE_APP_LINK }}"},
                {"name": "TRIBUTE_CHANNEL_LINK", "type": "plaintext", "text": "${{ secrets.TRIBUTE_CHANNEL_LINK }}"},
                {"name": "TRIBUTE_API_KEY", "type": "plaintext", "text": "${{ secrets.TRIBUTE_API_KEY }}"}
              ]
            }'
          
          echo "Результат настройки telegram-webhook"
          
          # Установка для lesson0-bot
          echo "Установка переменных для lesson0-bot..."
          curl -X PUT "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CF_ACCOUNT_ID }}/workers/scripts/linguapulse-lesson0-bot/settings/variables" \
            -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "variables": [
                {"name": "BOT_TOKEN", "type": "secret", "text": "${{ secrets.BOT_TOKEN }}"},
                {"name": "OPENAI_KEY", "type": "secret", "text": "${{ secrets.OPENAI_KEY }}"},
                {"name": "TRANSLOADIT_KEY", "type": "secret", "text": "${{ secrets.TRANSLOADIT_KEY }}"},
                {"name": "TRANSLOADIT_TPL", "type": "secret", "text": "${{ secrets.TRANSLOADIT_TPL }}"},
                {"name": "SYSTEM_PROMPT", "type": "plaintext", "text": "${{ secrets.SYSTEM_PROMPT }}"}
              ]
            }'
          
          echo "Результат настройки lesson0-bot"
          
          # Проверка настройки переменных для lesson0-bot
          echo "Проверка настройки переменных для lesson0-bot..."
          VARS_RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
            "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CF_ACCOUNT_ID }}/workers/scripts/linguapulse-lesson0-bot/settings/variables")
          
          echo "Список переменных (без значений): $VARS_RESPONSE"
          
          # Установка для test-bot
          echo "Установка переменных для test-bot..."
          curl -X PUT "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CF_ACCOUNT_ID }}/workers/scripts/linguapulse-test-bot/settings/variables" \
            -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "variables": [
                {"name": "BOT_TOKEN", "type": "secret", "text": "${{ secrets.BOT_TOKEN }}"},
                {"name": "OPENAI_KEY", "type": "secret", "text": "${{ secrets.OPENAI_KEY }}"},
                {"name": "SYSTEM_PROMPT", "type": "plaintext", "text": "${{ secrets.SYSTEM_PROMPT }}"}
              ]
            }'
          
          echo "Результат настройки test-bot"
          
          # Установка для main-lesson
          echo "Установка переменных для main-lesson..."
          curl -X PUT "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CF_ACCOUNT_ID }}/workers/scripts/main-lesson/settings/variables" \
            -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "variables": [
                {"name": "BOT_TOKEN", "type": "secret", "text": "${{ secrets.BOT_TOKEN }}"},
                {"name": "OPENAI_KEY", "type": "secret", "text": "${{ secrets.OPENAI_KEY }}"},
                {"name": "SYSTEM_PROMPT", "type": "plaintext", "text": "${{ secrets.SYSTEM_PROMPT }}"}
              ]
            }'
          
          echo "Результат настройки main-lesson"
          
          # Установка для reminder
          echo "Установка переменных для reminder..."
          curl -X PUT "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CF_ACCOUNT_ID }}/workers/scripts/reminder/settings/variables" \
            -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "variables": [
                {"name": "BOT_TOKEN", "type": "secret", "text": "${{ secrets.BOT_TOKEN }}"},
                {"name": "TRIBUTE_CHANNEL_LINK", "type": "plaintext", "text": "${{ secrets.TRIBUTE_CHANNEL_LINK }}"}
              ]
            }'
          
          echo "Результат настройки reminder"
          
          # Информация о результатах
          echo "Настройка переменных окружения завершена" 