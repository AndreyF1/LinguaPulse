name: Deploy to Cloudflare Workers

on:
  push:
    branches:
      - main  # или master, в зависимости от вашей основной ветки
  workflow_dispatch:  # позволяет запускать workflow вручную

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm install

      # Деплой всех воркеров через стандартные действия с сохранением переменных
      - name: Deploy telegram-webhook
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --env webhook --keep-vars
          
      - name: Deploy test-bot
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --env test-bot --keep-vars
          
      - name: Deploy main-lesson
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --env main-lesson --keep-vars
          
      - name: Deploy payment
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --env payment --keep-vars
          
      - name: Deploy reminder
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --env reminder --keep-vars

      # Специальный шаг для установки переменных и деплоя lesson0-bot
      - name: Setup and deploy lesson0-bot
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          echo "Настройка и деплой lesson0-bot..."
          
          # Проверка настройки переменных
          echo "Проверка текущих переменных..."
          npx wrangler secret list --env lesson0
          
          # Создаем временный файл wrangler-temp.toml с переменными
          cat > wrangler-temp.toml << EOF
          name = "linguapulse-lesson0-bot"
          main = "lesson0-bot.js"
          compatibility_date = "2025-05-17"
          keep_vars = true
          
          [vars]
          SYSTEM_PROMPT = "${{ secrets.SYSTEM_PROMPT }}"
          TRANSLOADIT_TPL = "${{ secrets.TRANSLOADIT_TPL }}"
          
          [[kv_namespaces]]
          binding = "CHAT_KV"
          id = "ff3bf4d1633d45cd92e95d193b7d250f"
          
          [[d1_databases]]
          binding = "USER_DB"
          database_id = "47f30572-4b57-4978-890d-4fa880cf1427"
          EOF
          
          # Деплой с временным файлом конфигурации
          echo "Деплой lesson0-bot с явными переменными..."
          npx wrangler deploy --config wrangler-temp.toml --keep-vars
          
          # Устанавливаем секреты после деплоя
          echo "Установка секретов..."
          echo "${{ secrets.BOT_TOKEN }}" | npx wrangler secret put BOT_TOKEN
          echo "${{ secrets.OPENAI_KEY }}" | npx wrangler secret put OPENAI_KEY
          echo "${{ secrets.TRANSLOADIT_KEY }}" | npx wrangler secret put TRANSLOADIT_KEY
          
          # Проверка настройки после деплоя
          echo "Проверка переменных после настройки..."
          npx wrangler secret list

      # Информация о переменных для других воркеров
      - name: Note about other workers variables
        run: |
          echo "⚠️ ВАЖНО: Переменные для других воркеров должны быть настроены через Cloudflare Dashboard."
          echo "Для настройки переменных вручную используйте раздел Settings > Variables and Secrets в Dashboard."
          echo "API-метод для настройки переменных не работает с текущим токеном."

      # Информация о переменных
      - name: Note about variables
        run: |
          echo "✅ Все воркеры теперь деплоятся с флагом --keep-vars"
          echo "✅ Это сохраняет существующие переменные при деплое"
          echo "✅ Вам нужно настроить переменные только один раз через Dashboard" 