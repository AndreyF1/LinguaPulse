"""Lambda —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ì–†–ê–ú–ú–ê–¢–ò–ö–ò - –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞"""
import sys
import os
import json

# –î–æ–±–∞–≤–ª—è–µ–º shared –≤ path (–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ Lambda)
sys.path.insert(0, '/var/task/shared')
sys.path.insert(0, '/var/task')

from shared.openai_client import get_openai_response
from shared.database import log_text_usage, get_supabase_config
from shared.utils import success_response, error_response, parse_request_body, validate_required_fields


def lambda_handler(event, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ Lambda –¥–ª—è –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏"""
    print(f"üìù Grammar Lambda called")
    
    try:
        body = parse_request_body(event)
        
        validation_error = validate_required_fields(body, ['action'])
        if validation_error:
            return error_response(validation_error)
        
        action = body['action']
        
        if action == 'check_grammar':
            return handle_grammar_check(body)
        else:
            return error_response(f'Unknown action: {action}')
            
    except Exception as e:
        print(f"‚ùå Grammar Lambda error: {e}")
        return error_response(f'Internal error: {str(e)}', 500)


def handle_grammar_check(body):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏"""
    validation_error = validate_required_fields(body, ['text', 'user_id'])
    if validation_error:
        return error_response(validation_error)
    
    text = body['text']
    user_id = body['user_id']
    
    print(f"üìù Checking grammar for user {user_id}: {text[:50]}...")
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏ (–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)
    system_prompt = """You are the Grammar mode of a language-learning bot.
Your only task is to answer questions about English grammar.

Rules of behavior:

Treat broadly: any question about usage of words, forms, structures, or patterns in English (including prepositions, articles, tense choice, word order, conditionals, etc.) counts as grammar.

Only if the question is 100% unrelated to English grammar (e.g., "translate this text," "tell me about New York") ‚Üí reply once: –≠—Ç–æ—Ç —Ä–µ–∂–∏–º –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –≥—Ä–∞–º–º–∞—Ç–∏–∫–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞.

If the question is vague but grammar-related ‚Üí ask one clarifying question.

If the question is clear ‚Üí give a structured explanation immediately.

CRITICAL LANGUAGE RULE:

Determine the MAIN language of the user's question (ignore English grammar terms in the question):
- If question is PRIMARILY in Russian (even if contains English grammar terms like "would", "present perfect") ‚Üí answer in Russian
- If question is PRIMARILY in English ‚Üí answer in English

HOW TO DETECT:
- Check service words: –µ—Å–ª–∏ –µ—Å—Ç—å "–∫–∞–∫", "—á—Ç–æ", "–ø–æ—á–µ–º—É", "–º–æ–∂–Ω–æ" ‚Üí —ç—Ç–æ —Ä—É—Å—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å
- Check sentence structure and majority of words
- English grammar terms in Russian question don't make it English!

Examples:
- "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å would?" ‚Üí Russian question (answer in Russian)
- "–ß—Ç–æ —Ç–∞–∫–æ–µ present perfect?" ‚Üí Russian question (answer in Russian)  
- "How to use would?" ‚Üí English question (answer in English)

Use English ONLY for examples and grammar term definitions.

Be concise, clear, and practical.

If the user provides their own sentence ‚Üí first confirm/correct it, then explain why.

Structure of full answer:

*Rule*
1‚Äì2 lines

*Form/Structure*
patterns, word order, common collocations

*Use & Contrast*
when to use, difference from related forms

*Examples*
5‚Äì7 with ‚úÖ/‚ùå if relevant

*Common mistakes & tips*

*Mini-practice (3 items)*

*Answer key*
1. ||answer||
2. ||answer||  
3. ||answer||

FORMATTING REQUIREMENTS:
- Use single asterisks *word* for bold (NOT **word**)
- ALWAYS wrap practice answers in double pipes: ||answer||
- Example: "1. ||would go||" NOT "1. would go"
- This creates spoilers in Telegram that users can tap to reveal

Example of correct Answer key format:
*–û—Ç–≤–µ—Ç—ã –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫—É*
1. ||would go||
2. ||to like||
3. ||would buy||"""
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç OpenAI
    result = get_openai_response(text, system_prompt)
    
    if result['success']:
        print(f"‚úÖ Grammar check successful for user {user_id}")
        
        # –õ–æ–≥–∏—Ä—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
        supabase_config = get_supabase_config()
        if supabase_config['url'] and supabase_config['key']:
            log_text_usage(user_id, supabase_config['url'], supabase_config['key'])
        
        return success_response({
            'reply': result['reply']
        })
    else:
        print(f"‚ùå Grammar check failed: {result['error']}")
        return error_response(f"Grammar check error: {result['error']}")
